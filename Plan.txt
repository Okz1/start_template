1) npm i gulp -g // встановлюємо галп глобально
2) npm init //ініціалізує файл для нашого проекту
3) package.json // маніфест проекту, несе інформацію про пакети які ми використовуємо, дозволяє швидко розгортати готовий проект з пакетами які в ньому прописані
4) npm i gulp --save-dev// --save-dev-дозволяє встановити пакет і версію в package.json

5) node-modules // папка в якій зберігаються всі пакети і їхні залежносі після установки в проект 
6) app- Всі оригінальні матеріали проекту(js sass html img)
7) dist- Продакшен, готовий продукт після збірки, зжатий 

8) gulp.src('source-file') джерело файла
9) .pipe() // виклик команди, плагіна 
10) .pipe(gulp.dest('folder')) //вибираємо папку для вигрузки результатів, dest- шлях
	
11) npm i gulp-sass --save-dev// встановлення плагіна САСС npm install -g scss-compile  --save-dev
12) gulp sass// виконуємо такс САСС який описали в gulpfile.js
13) return gulp.src('app/sass/**/*.sass') // вибираємо всі файли з розширеннням сасс зі всіх піддерикторій
14) return gulp.src('!app/sass/main.sass') всі файли крім даного буду зкомпільовано
15) return gulp.src('app/sass/**/*.+(scss|sass)') вибираємо всі файли з під дерикторій з розширенням sass scss
16) файли в папках такого виду ''_part.sass'' не беруть участі в компіляції як окремі файли, вони добвляються імпортом в інші файли

17) gulp watch // запускаємо відслідковування за змінами в файлах, такс описано в глпфайлі
	notify: false // відключаємо спливаючі вікна в браузері

18) npm i browser-sync --save-dev // скачуємо даний плагін з записом в package.json
19) gulp.task('watch',['browser-sync', 'sass'], function(){ //в квадратних дужках перераховуємо таски, які треба виконати до запуску таску watch, в даному випадку браузер сінк і сасс


20) gulp watch // запускає браузер сінк і вочінг за зміною файлів

21) common.js- файлик з користувацькими функціями

22) Створюємо папку Libs // папка для зберігання бібліотек скріптів, плагінів ітд
23) npm i -g bower //Bower пакетний менджер для вебу
24) Створюємо файл .bowerrc в корені нашого проекту

25) встановлюємо npm i gulp-concat --save-dev  // для конкатинації
26) npm i gulp-uglifyjs --save-dev  // для зжимання js файлів

27) gulp scripts// запускаємо мініфікацію і конкатинацію

28) стоврюємо файл libs.sass // файл в який імпортуємо стилі наших бібліотек


29) npm i gulp-cssnano --save-dev // мініфікація css
30) npm i gulp-rename --save-dev// rename

31) npm i del -save-dev //видалення(очищення) файлів

32) npm i gulp-imagemin --save-dev
33) npm i gulp-imagemin-pngquant --save-dev

34) npm i gulp-autoprefixer --save-dev


35) для запуску npm i 

